@model List<ClinicAppointmentGroupProject.Controllers.UserRoleViewModel>
@{
    ViewData["Title"] = "Pending Approvals";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold">⏳ Pending Approvals</h1>
        <div class="btn-group">
            <a asp-action="Users" class="btn btn-outline-primary">👥 All Users</a>
            <a asp-action="Dashboard" class="btn btn-outline-secondary">📊 Dashboard</a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow">
        <div class="card-header bg-warning text-dark">
            <h5 class="mb-0">Users Waiting for Approval</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Requested Role</th>
                                <th>Specialization</th>
                                <th>Registered On</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var userRole in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@userRole.User.FullName</strong>
                                    </td>
                                    <td>@userRole.User.Email</td>
                                    <td>
                                        @foreach (var role in userRole.Roles)
                                        {
                                            <span class="badge @GetRoleBadgeClass(role)">@role</span>
                                        }
                                    </td>
                                    <td>@userRole.User.Specialization</td>
                                    <td>@userRole.User.CreatedAt.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <button type="button" class="btn btn-success"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#approveModal"
                                                    data-userid="@userRole.User.Id"
                                                    data-username="@userRole.User.FullName">
                                                Approve
                                            </button>
                                            <button type="button" class="btn btn-danger"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#rejectModal"
                                                    data-userid="@userRole.User.Id"
                                                    data-username="@userRole.User.FullName">
                                                Reject
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">No pending approvals. All users have been processed.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Approve Modal -->
<div class="modal fade" id="approveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Approve User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="approveForm" method="post">
                <div class="modal-body">
                    <p>Are you sure you want to approve <strong id="approveUserName"></strong>?</p>
                    <div class="mb-3">
                        <label for="approveNotes" class="form-label">Admin Notes (Optional)</label>
                        <textarea class="form-control" id="approveNotes" name="adminNotes" rows="3"
                                  placeholder="Add any notes for this approval..."></textarea>
                    </div>
                    <input type="hidden" id="approveUserId" name="userId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success" asp-action="ApproveUser">Approve</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="rejectForm" method="post">
                <div class="modal-body">
                    <p>Are you sure you want to reject <strong id="rejectUserName"></strong>?</p>
                    <div class="mb-3">
                        <label for="rejectNotes" class="form-label">Reason for Rejection (Optional)</label>
                        <textarea class="form-control" id="rejectNotes" name="adminNotes" rows="3"
                                  placeholder="Provide reason for rejection..."></textarea>
                    </div>
                    <input type="hidden" id="rejectUserId" name="userId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" asp-action="RejectUser">Reject</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Approve Modal
        var approveModal = document.getElementById('approveModal');
        approveModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var userId = button.getAttribute('data-userid');
            var userName = button.getAttribute('data-username');

            document.getElementById('approveUserId').value = userId;
            document.getElementById('approveUserName').textContent = userName;
        });

        // Reject Modal
        var rejectModal = document.getElementById('rejectModal');
        rejectModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedBound;
            var userId = button.getAttribute('data-userid');
            var userName = button.getAttribute('data-username');

            document.getElementById('rejectUserId').value = userId;
            document.getElementById('rejectUserName').textContent = userName;
        });
    </script>
}

@functions {
    public string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "Doctor" => "bg-primary",
            "Client" => "bg-success",
            _ => "bg-secondary"
        };
    }
}